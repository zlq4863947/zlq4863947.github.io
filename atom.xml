<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zlq4863947</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://aitrade.ga/"/>
  <updated>2019-08-24T01:48:56.000Z</updated>
  <id>https://aitrade.ga/</id>
  
  <author>
    <name>zlq4863947</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>5分钟通过JS代码制作QQ机器人</title>
    <link href="https://aitrade.ga/blog/2019/08/24/5%E5%88%86%E9%92%9F%E9%80%9A%E8%BF%87JS%E4%BB%A3%E7%A0%81%E5%88%B6%E4%BD%9CQQ%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    <id>https://aitrade.ga/blog/2019/08/24/5分钟通过JS代码制作QQ机器人/</id>
    <published>2019-08-24T01:47:33.000Z</published>
    <updated>2019-08-24T01:48:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ioqq-上手指南"><a href="#ioqq-上手指南" class="headerlink" title="ioqq 上手指南"></a>ioqq 上手指南</h1><p><strong>ioqq</strong>为调用<strong>酷 Q</strong> 的 DLL 接口来操作 qq，从而使 qq 可通过编程编写成 qq 机器人的 API 库。<br><strong>酷 Q</strong>安装环境可使用<strong>ioqq</strong>提供的命令一键安装及运行。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li>通过 API 操纵 QQ</li></ul><h2 id="前提环境"><a href="#前提环境" class="headerlink" title="前提环境"></a>前提环境</h2><ul><li>安装<a href="https://www.docker.com/" target="_blank" rel="noopener">docker</a></li></ul><blockquote><p>也可以直接安装<a href="https://cqp.cc/t/23253" target="_blank" rel="noopener">酷 Q</a>，不过建议安装<a href="https://www.docker.com/" target="_blank" rel="noopener">docker</a>，便于使用 ioqq 管理酷 Q 环境</p></blockquote><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="1、安装-ioqq-模块"><a href="#1、安装-ioqq-模块" class="headerlink" title="1、安装 ioqq 模块"></a>1、安装 ioqq 模块</h3><p>运行 <code>npm install ioqq</code></p><a id="more"></a><h3 id="2、安装并运行酷-Q"><a href="#2、安装并运行酷-Q" class="headerlink" title="2、安装并运行酷 Q"></a>2、安装并运行酷 Q</h3><p>运行 <code>npm explore ioqq -- npm run docker:up</code><br><img src="https://upload-images.jianshu.io/upload_images/5664775-97735822a8c614e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><blockquote><p>运行<code>npm explore ioqq -- npm run docker:stop</code>，可以停止运行 docker 的酷 Q 容器<br>运行<code>npm explore ioqq -- npm run docker:down</code>，可以停止并删除 docker 的酷 Q 容器</p></blockquote><h3 id="3、配置酷-Q，登录希望被程序控制的-QQ"><a href="#3、配置酷-Q，登录希望被程序控制的-QQ" class="headerlink" title="3、配置酷 Q，登录希望被程序控制的 QQ"></a>3、配置酷 Q，登录希望被程序控制的 QQ</h3><ul><li><p>使用浏览器进入<code>127.0.0.1:9000</code>地址<br><img src="https://upload-images.jianshu.io/upload_images/5664775-f298a5ce4b740886.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p></li><li><p>输入默认密码: <code>PAsSwoRd</code>, 点击<code>Send Password</code>按钮<br><img src="https://upload-images.jianshu.io/upload_images/5664775-f263c921e1684b6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p></li><li><p>输入 qq 账号和密码，建议使用小号（Q 龄尽量别太小），登录的 QQ 需要开启安全设备锁。<br><img src="https://upload-images.jianshu.io/upload_images/5664775-141ca5356ad8a17d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p></li><li><p>填写正确 qq 号及密码并点击确定按钮后，会提示安全验证（没开启设备锁的同学，会被提示要求开启设备锁），点击<code>是</code>,输入正确验证码后，点击确定<br><img src="https://upload-images.jianshu.io/upload_images/5664775-b51771cf99ff1b8d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p></li><li><p>成功在酷 Q 上登录 qq<br><img src="https://upload-images.jianshu.io/upload_images/5664775-abc12dfb0f9e239e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p></li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li>手动创建<code>test.js</code>文件后，复制以下代码:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var &#123; Rest &#125; = require(&quot;ioqq&quot;);</span><br><span class="line"></span><br><span class="line">var rest = new Rest(&quot;http://127.0.0.1:5700&quot;);</span><br><span class="line">rest.sendPrivateMessage(123456, `测试的消息,t=$&#123;Date.now()&#125;`);</span><br></pre></td></tr></table></figure><blockquote><p>Rest 中的<code>http://127.0.0.1:5700</code>为默认 http 接口地址<br><code>sendPrivateMessage</code>为给指定好友发送私有消息，其中第一个参数为对方 QQ 号码</p></blockquote><ul><li><p>运行 <code>node test</code><br><img src="https://upload-images.jianshu.io/upload_images/5664775-1918974e3562e3a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p></li><li><p>运行结果<br><img src="https://upload-images.jianshu.io/upload_images/5664775-5f8a3275585c4c05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p></li></ul><p>以上就是安装及使用 ioqq 的教程，其他详细信息，请参考<a href="https://github.com/zlq4863947/ioqq" target="_blank" rel="noopener">ioqq</a>项目说明。</p><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><ul><li><p>sendGroupMessage<br>发送 Q 群消息</p></li><li><p>sendPrivateMessage<br>发送个人消息</p></li><li><p>getGroupList<br>获取所有已加入 Q 群的信息</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ioqq-上手指南&quot;&gt;&lt;a href=&quot;#ioqq-上手指南&quot; class=&quot;headerlink&quot; title=&quot;ioqq 上手指南&quot;&gt;&lt;/a&gt;ioqq 上手指南&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;ioqq&lt;/strong&gt;为调用&lt;strong&gt;酷 Q&lt;/strong&gt; 的 DLL 接口来操作 qq，从而使 qq 可通过编程编写成 qq 机器人的 API 库。&lt;br&gt;&lt;strong&gt;酷 Q&lt;/strong&gt;安装环境可使用&lt;strong&gt;ioqq&lt;/strong&gt;提供的命令一键安装及运行。&lt;/p&gt;
&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过 API 操纵 QQ&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;前提环境&quot;&gt;&lt;a href=&quot;#前提环境&quot; class=&quot;headerlink&quot; title=&quot;前提环境&quot;&gt;&lt;/a&gt;前提环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装&lt;a href=&quot;https://www.docker.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;也可以直接安装&lt;a href=&quot;https://cqp.cc/t/23253&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;酷 Q&lt;/a&gt;，不过建议安装&lt;a href=&quot;https://www.docker.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;docker&lt;/a&gt;，便于使用 ioqq 管理酷 Q 环境&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;环境安装&quot;&gt;&lt;a href=&quot;#环境安装&quot; class=&quot;headerlink&quot; title=&quot;环境安装&quot;&gt;&lt;/a&gt;环境安装&lt;/h2&gt;&lt;h3 id=&quot;1、安装-ioqq-模块&quot;&gt;&lt;a href=&quot;#1、安装-ioqq-模块&quot; class=&quot;headerlink&quot; title=&quot;1、安装 ioqq 模块&quot;&gt;&lt;/a&gt;1、安装 ioqq 模块&lt;/h3&gt;&lt;p&gt;运行 &lt;code&gt;npm install ioqq&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>有妖气(仿)iOS应用源码解读(一)</title>
    <link href="https://aitrade.ga/blog/2018/03/28/%E6%9C%89%E5%A6%96%E6%B0%94-%E4%BB%BF-iOS%E5%BA%94%E7%94%A8%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB-%E4%B8%80/"/>
    <id>https://aitrade.ga/blog/2018/03/28/有妖气-仿-iOS应用源码解读-一/</id>
    <published>2018-03-28T04:24:42.000Z</published>
    <updated>2018-09-01T04:01:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>最近吹牛说要做iOS漫画软件，所以在github上找到下面源代码：</p><p>解读源码地址：<a href="https://github.com/spicyShrimp/U17" target="_blank" rel="noopener">https://github.com/spicyShrimp/U17</a><br>实际画面：<br><a id="more"></a> </p><table><thead><tr><th style="text-align:center">启动图标</th><th style="text-align:center">启动后显示画面</th></tr></thead><tbody><tr><td style="text-align:center"><img src="/blog/2018/03/28/有妖气-仿-iOS应用源码解读-一/1.png" alt></td><td style="text-align:center"><img src="/blog/2018/03/28/有妖气-仿-iOS应用源码解读-一/2.png" alt></td></tr></tbody></table><h2 id="开发環境"><a href="#开发環境" class="headerlink" title="开发環境"></a>开发環境</h2><ul><li>Xcode ９.２</li><li>Swift 4.0.3</li></ul><h2 id="启动应用"><a href="#启动应用" class="headerlink" title="启动应用"></a>启动应用</h2><p>作者应该是没有做splash，所以打开后会短暂白屏，</p><ul><li>AppDelegate.swift<br>AppDelegate为app启动的代理类，也就是程序的入口。<br>每个ios应用程序都有一个AppDelegate.swift。<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  AppDelegate.swift</span></span><br><span class="line"><span class="comment">//  U17</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by charles on 2017/9/29.</span></span><br><span class="line"><span class="comment">//  Copyright © 2017年 None. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// UI工具包</span></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="comment">// @see https://blog.csdn.net/xoxo_x/article/details/76390775</span></span><br><span class="line"><span class="comment">// 网络请求的开源库</span></span><br><span class="line"><span class="keyword">import</span> Alamofire</span><br><span class="line"><span class="comment">// 键盘监听</span></span><br><span class="line"><span class="keyword">import</span> IQKeyboardManagerSwift</span><br><span class="line"></span><br><span class="line"><span class="meta">@UIApplicationMain</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppDelegate</span>: <span class="title">UIResponder</span>, <span class="title">UIApplicationDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> window: <span class="type">UIWindow?</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 延时加载reachability</span></span><br><span class="line">    <span class="built_in">lazy</span> <span class="keyword">var</span> reachability: <span class="type">NetworkReachabilityManager?</span> = &#123;</span><br><span class="line">        <span class="comment">// 实时监测与http://app.u17.com连接状况</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">NetworkReachabilityManager</span>(host: <span class="string">"http://app.u17.com"</span>)</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置为竖屏显示</span></span><br><span class="line">    <span class="keyword">var</span> orientation: <span class="type">UIInterfaceOrientationMask</span> = .portrait</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 应用加载完成时</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: <span class="keyword">Any</span>]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        </span><br><span class="line">        configBase()</span><br><span class="line">        </span><br><span class="line">        window = <span class="type">UIWindow</span>(frame: <span class="type">UIScreen</span>.main.bounds)</span><br><span class="line">        window?.backgroundColor = <span class="type">UIColor</span>.white</span><br><span class="line">        window?.rootViewController = <span class="type">UTabBarController</span>()</span><br><span class="line">        window?.makeKeyAndVisible()</span><br><span class="line">        <span class="comment">//MARK: 修正齐刘海</span></span><br><span class="line"><span class="comment">//        UHairPowder.instance.spread()</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 基本配置</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">configBase</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// 开启键盘监听</span></span><br><span class="line">        <span class="type">IQKeyboardManager</span>.sharedManager().enable = <span class="literal">true</span></span><br><span class="line">        <span class="comment">// 点击背景收起键盘</span></span><br><span class="line">        <span class="type">IQKeyboardManager</span>.sharedManager().shouldResignOnTouchOutside = <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 本地存储对象</span></span><br><span class="line">        <span class="keyword">let</span> defaults = <span class="type">UserDefaults</span>.standard</span><br><span class="line">        <span class="keyword">if</span> defaults.value(forKey: <span class="type">String</span>.sexTypeKey) == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="comment">// 设置性别类型为1（1：男性,2:女性？）</span></span><br><span class="line">            defaults.<span class="keyword">set</span>(<span class="number">1</span>, forKey: <span class="type">String</span>.sexTypeKey)</span><br><span class="line">            <span class="comment">// 保存数据</span></span><br><span class="line">            defaults.synchronize()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        reachability?.listener = &#123; status <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">switch</span> status &#123;</span><br><span class="line">            <span class="comment">// 使用蜂窝数据时</span></span><br><span class="line">            <span class="keyword">case</span> .reachable(.wwan):</span><br><span class="line">                <span class="comment">// 通知显示</span></span><br><span class="line">                <span class="type">UNoticeBar</span>(config: <span class="type">UNoticeBarConfig</span>(title: <span class="string">"主人,检测到您正在使用移动数据"</span>)).show(duration: <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">default</span>: <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 开始监听</span></span><br><span class="line">        reachability?.startListening()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> application: UIApplication, supportedInterfaceOrientationsFor window: UIWindow?)</span></span> -&gt; <span class="type">UIInterfaceOrientationMask</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> orientation</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIApplication</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">changeOrientationTo</span>(<span class="title">landscapeRight</span>: <span class="title">Bool</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> delegate = <span class="type">UIApplication</span>.shared.delegate <span class="keyword">as</span>? <span class="type">AppDelegate</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="comment">// 横屏右转时</span></span><br><span class="line">        <span class="keyword">if</span> landscapeRight == <span class="literal">true</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 代理的物理方向设置为右横屏</span></span><br><span class="line">            delegate.orientation = .landscapeRight</span><br><span class="line">            <span class="comment">// 为window设置支持的方向</span></span><br><span class="line">            <span class="type">UIApplication</span>.shared.supportedInterfaceOrientations(<span class="keyword">for</span>: delegate.window)</span><br><span class="line">            <span class="comment">// 设备设置为右横屏</span></span><br><span class="line">            <span class="type">UIDevice</span>.current.setValue(<span class="type">UIInterfaceOrientation</span>.landscapeRight.rawValue, forKey: <span class="string">"orientation"</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            delegate.orientation = .portrait</span><br><span class="line">            <span class="type">UIApplication</span>.shared.supportedInterfaceOrientations(<span class="keyword">for</span>: delegate.window)</span><br><span class="line">            <span class="type">UIDevice</span>.current.setValue(<span class="type">UIInterfaceOrientation</span>.portrait.rawValue, forKey: <span class="string">"orientation"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;p&gt;最近吹牛说要做iOS漫画软件，所以在github上找到下面源代码：&lt;/p&gt;
&lt;p&gt;解读源码地址：&lt;a href=&quot;https://github.com/spicyShrimp/U17&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/spicyShrimp/U17&lt;/a&gt;&lt;br&gt;实际画面：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://aitrade.ga/categories/iOS/"/>
    
    
      <category term="漫画应用" scheme="https://aitrade.ga/tags/%E6%BC%AB%E7%94%BB%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="https://aitrade.ga/blog/2017/11/12/%E6%B5%8B%E8%AF%95/"/>
    <id>https://aitrade.ga/blog/2017/11/12/测试/</id>
    <published>2017-11-11T15:17:49.000Z</published>
    <updated>2018-09-01T04:01:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="比特币行情涨的太猛了吧"><a href="#比特币行情涨的太猛了吧" class="headerlink" title="比特币行情涨的太猛了吧"></a>比特币行情涨的太猛了吧</h2><p><span id="aitrade-copyright">Market quotes are powered by <a href="http://tc.aitrade.ga" rel="nofollow" target="_blank" style="color: #3BB3E4">aitrade.ga</a></span></p><a id="more"></a> <!-- script type="text/javascript" src="/js/src/widget-market-quotes.js">{  "title_raw": "Cryptocurrencies",   "symbolsGroups": [    {      "symbols": [        {          "name": "BITSTAMP:BTCUSD"        },         {          "name": "COINBASE:BTCEUR"        },         {          "name": "COINBASE:BTCGBP"        },         {          "name": "BITFLYER:BTCJPY"        },         {          "name": "BTCE:BTCRUR"        },         {          "name": "BTCCHINA:BTCCNY"        }      ],       "name": "Bitcoin"    },     {      "symbols": [        {          "name": "BITFINEX:ETHUSD"        },         {          "name": "BITFINEX:ETHBTC"        },         {          "name": "BITFINEX:BCHUSD"        },         {          "name": "POLONIEX:XRPBTC"        },         {          "name": "BITFINEX:LTCUSD"        },         {          "name": "POLONIEX:ETCBTC"        }      ],       "name": "Altcoins"    }  ],   "title": "Cryptocurrencies",   "title_link": "/markets/cryptocurrencies/quotes-all/",   "locale": "zh_CN",   "height": 450,   "width": "100%"}</script-->]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;比特币行情涨的太猛了吧&quot;&gt;&lt;a href=&quot;#比特币行情涨的太猛了吧&quot; class=&quot;headerlink&quot; title=&quot;比特币行情涨的太猛了吧&quot;&gt;&lt;/a&gt;比特币行情涨的太猛了吧&lt;/h2&gt;&lt;p&gt;&lt;span id=&quot;aitrade-copyright&quot;&gt;Market quotes are powered by &lt;a href=&quot;http://tc.aitrade.ga&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; style=&quot;color: #3BB3E4&quot;&gt;aitrade.ga&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="大前端" scheme="https://aitrade.ga/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://aitrade.ga/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hexo" scheme="https://aitrade.ga/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://aitrade.ga/blog/2017/11/11/hello-world/"/>
    <id>https://aitrade.ga/blog/2017/11/11/hello-world/</id>
    <published>2017-11-10T15:17:49.000Z</published>
    <updated>2018-09-01T04:01:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a> <p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
